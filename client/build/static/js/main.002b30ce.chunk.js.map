{"version":3,"sources":["SummaryPage.js","Entry.js","Date.js","AddPage.js","GridCell.js","GridRow.js","HistoryPage.js","MonthStatement.js","AnnualStatement.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["SummaryPage","this","props","currentAnnualStatement","getMonthTotalIncome","currentMonth","toFixed","getMonthTotalExpense","totalIncome","totalExpense","className","getAnnualTotalIncome","getAnnualTotalExpense","React","Component","Entry","id","date","income","expense","category","location","description","Date","year","month","day","AddPage","onAddEntry","dateParts","state","inputDate","split","console","log","idCount","inputIncome","inputExpense","inputCategory","inputLocation","inputDescription","setState","onAddCategory","inputNewCategory","length","today","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","field","evt","val","target","value","inputMode","onChange","updateInput","onClick","GridCell","isDate","cellId","GridRow","columnRow","map","i","key","newCellId","isHeaderRow","renderCells","rowContent","rowId","HistoryPage","onChangeViewYear","e","onChangeViewMonth","annualStatement","categories","months","dates","push","headerRowContent","forEach","categoryName","newRowId","entries","getMonthEntries","entry","renderEntry","options","op","availableMonths","selectedMonth","getCurrentYear","renderSelectOption","availableYears","getCurrentMonth","data-simplebar","data-simplebar-auto-hide","renderGrid","MonthStatement","monthlyEntires","calculateTotal","AnnualStatement","monthlyStatements","initEmptyMonthStatement","statements","Array","statement","addEntry","includes","Dashboard","CLIENT_ID","handleNewEntry","getCurrentAnnualStatement","newCurrentAnnualStatement","annualStatementIndex","currentYearIndex","yearDNE","allAnnualStatements","addNewAnnualStatementWithEntry","newAllAnnualStatements","addCategory","addEntryToMonthStatement","handleNewCategory","c","setCurrentAnnualStatement","handleChangeViewYear","firstAvailableMonth","monthStatement","isStatementEmpty","handleChangeViewMonth","successLoginGoogle","response","url","tokenObj","access_token","fetch","then","res","json","data","failureLoginGoogle","saveToDrive","JSON","stringify","newStatement","newAllAnnualStatement","newAnnualStatement","newCurrentYearIndex","years","clientId","buttonText","onSuccess","onFailure","cookiePolicy","scope","isSignedIn","getAvailableYears","getAvailableMonths","App","useState","setData","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.002b30ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SummaryPage.css'\r\n\r\nclass SummaryPage extends React.Component {\r\n\r\n    getMonthTotalIncome() {\r\n        if (this.props.currentAnnualStatement !== null) {\r\n            return this.props.currentAnnualStatement.getMonthTotalIncome(this.props.currentMonth).toFixed(2);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getMonthTotalExpense() {\r\n        if (this.props.currentAnnualStatement !== null) {\r\n            return this.props.currentAnnualStatement.getMonthTotalExpense(this.props.currentMonth).toFixed(2);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getAnnualTotalIncome() {\r\n        if (this.props.currentAnnualStatement !== null) {\r\n            return this.props.currentAnnualStatement.totalIncome.toFixed(2)\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getAnnualTotalExpense() {\r\n        if (this.props.currentAnnualStatement !== null) {\r\n            return this.props.currentAnnualStatement.totalExpense.toFixed(2);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SummaryPage-body\">\r\n                <div className=\"SummaryPage-header-label SummaryPage-main-header-label\">Summary</div>\r\n                <div>\r\n                    <div className=\"SummaryPage-header-label\">This Month</div>\r\n                    <div className=\"SummaryPage-income-expense-block\">\r\n                        <div className=\"SummaryPage-income-expense-line\">\r\n                            <span className=\"income-indicator\">&#9650;</span> \r\n                            ${this.getMonthTotalIncome()}\r\n                        </div>\r\n                        <div className=\"SummaryPage-income-expense-line\">\r\n                            <span className=\"expense-indicator\">&#9660;</span> \r\n                            ${this.getMonthTotalExpense()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"SummaryPage-header-label\">This Year</div>\r\n                    <div className=\"SummaryPage-income-expense-block\">\r\n                        <div className=\"SummaryPage-income-expense-line\">\r\n                            <span className=\"income-indicator\">&#9650;</span> \r\n                            ${this.getAnnualTotalIncome()}\r\n                        </div>\r\n                        <div className=\"SummaryPage-income-expense-line\">\r\n                            <span className=\"expense-indicator\">&#9660;</span> \r\n                            ${this.getAnnualTotalExpense()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SummaryPage;","class Entry {\r\n    constructor(id, date, income, expense, category, location, description) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.income = income;\r\n        this.expense = expense;\r\n        this.category = category;\r\n        this.location = location;\r\n        this.description = description;\r\n    }\r\n}\r\n\r\nexport default Entry;","class Date {\r\n    constructor(year, month, day) {\r\n        this.year = year;\r\n        this.month = +month;\r\n        this.day = +day;\r\n    }\r\n\r\n    equal(date) {\r\n        return this.year === date.year && this.month === date.month && this.day === date.day;\r\n    }\r\n}\r\n\r\nexport default Date;","import React from 'react';\r\nimport './AddPage.css'\r\nimport Entry from './Entry';\r\nimport Date from './Date';\r\n\r\nclass AddPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idCount: 0,\r\n            inputDate: \"2022/1/1\",             // 0\r\n            inputCategory: \"abc\",         // 1\r\n            inputLocation: \"soeb\",         // 2\r\n            inputIncome: \"123\",           // 3\r\n            inputExpense: \"423\",          // 4\r\n            inputDescription: \"dsafsafsd\",      // 5\r\n            inputNewCategory: \"\",      // 6\r\n        }\r\n    }\r\n\r\n    timeNow() {\r\n        var today = new Date();\r\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        return date + \" \" + time;\r\n    }\r\n\r\n    onAddEntry = () => {\r\n        let dateParts = this.state.inputDate.split(\"/\");\r\n        console.log(dateParts);\r\n        this.props.onAddEntry(new Entry(\r\n            this.state.idCount, \r\n            new Date(dateParts[0], dateParts[1], dateParts[2]), \r\n            this.state.inputIncome, \r\n            this.state.inputExpense, \r\n            this.state.inputCategory, \r\n            this.state.inputLocation, \r\n            this.state.inputDescription));\r\n        this.setState({idCount: this.state.idCount + 1});\r\n        console.log(this.state.inputIncome);\r\n    }\r\n\r\n    onAddCategory = () => {\r\n        if (this.state.inputNewCategory.length > 0) {\r\n            this.props.onAddCategory(this.state.inputNewCategory);\r\n        }\r\n    }\r\n\r\n    updateInput(field, evt) {\r\n        const val = evt.target.value;\r\n        if (field === 0) \r\n            this.setState({inputDate: val});\r\n        else if (field === 1) \r\n            this.setState({inputCategory: val});\r\n        else if (field === 2) \r\n            this.setState({inputLocation: val});\r\n        else if (field === 3) \r\n            this.setState({inputIncome: val});\r\n        else if (field === 4) \r\n            this.setState({inputExpense: val});\r\n        else if (field === 5) \r\n            this.setState({inputDescription: val});\r\n        else if (field === 6)\r\n            this.setState({inputNewCategory: val});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"AddPage-body\">\r\n                <div className=\"AddPage-header-label\">\r\n                    Add Entry\r\n                </div>\r\n                <div className=\"AddPage-form\">\r\n                    <div className=\"AddPage-field-block\">\r\n                        <div className=\"AddPage-field-label\">Date</div>\r\n                        <input className=\"AddPage-field-input\" inputMode=\"text\"\r\n                            value={this.state.inputDate}\r\n                            onChange={evt => this.updateInput(0, evt)}></input>\r\n                    </div>\r\n                    <div className=\"AddPage-field-block\">\r\n                        <div className=\"AddPage-field-label\">Category</div>\r\n                        <input className=\"AddPage-field-input\" inputMode=\"text\"\r\n                            value={this.state.inputCategory}\r\n                            onChange={evt => this.updateInput(1, evt)}></input>\r\n                    </div>\r\n                    <div className=\"AddPage-field-block\">\r\n                        <div className=\"AddPage-field-label\">Location</div>\r\n                        <input className=\"AddPage-field-input\" inputMode=\"text\"\r\n                            value={this.state.inputLocation}\r\n                            onChange={evt => this.updateInput(2, evt)}></input>\r\n                    </div>\r\n                    <div className=\"AddPage-field-block\">\r\n                        <div className=\"AddPage-field-label\">Income</div>\r\n                        <input className=\"AddPage-field-input\" inputMode=\"numeric\"\r\n                            value={this.state.inputIncome}\r\n                            onChange={evt => this.updateInput(3, evt)}></input>\r\n                    </div>\r\n                    <div className=\"AddPage-field-block\">\r\n                        <div className=\"AddPage-field-label\">Expense</div>\r\n                        <input className=\"AddPage-field-input\" inputMode=\"numeric\"\r\n                            value={this.state.inputExpense}\r\n                            onChange={evt => this.updateInput(4, evt)}></input>\r\n                    </div>\r\n                    <div className=\"AddPage-field-block\">\r\n                        <div className=\"AddPage-field-label\">Description</div>\r\n                        <input className=\"AddPage-field-input\" inputMode=\"text\"\r\n                            value={this.state.inputDescription}\r\n                            onChange={evt => this.updateInput(5, evt)}></input>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"AddPage-field-block\">\r\n                        <button className=\"AddPage-form-btn\" onClick={() => this.onAddEntry()}>Add</button>\r\n                        <button className=\"AddPage-form-btn\">Clear</button>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"AddPage-header-label\">\r\n                    Add Category\r\n                </div>\r\n                <div className=\"AddPage-form\">\r\n                    <div className=\"AddPage-field-block\">\r\n                        <div className=\"AddPage-field-label\">Category</div>\r\n                        <input className=\"AddPage-field-input\" inputMode=\"text\" \r\n                            value={this.state.inputNewCategory}\r\n                            onChange={evt => this.updateInput(6, evt)}></input>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"AddPage-field-block\">\r\n                        <button className=\"AddPage-form-btn\" onClick={() => this.onAddCategory()}>Add</button>\r\n                        <button className=\"AddPage-form-btn\">Clear</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPage;","import React from \"react\";\r\n\r\nclass GridCell extends React.Component {\r\n\r\n    static cellId = 0;\r\n    static newCellId() {\r\n        this.cellId++;\r\n        return this.cellId;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className= {this.props.isDate ? \"grid-cell grid-cell-date\" : \"grid-cell\"}>\r\n                {this.props.value}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GridCell;","import React from \"react\";\r\nimport GridCell from \"./GridCell\";\r\nimport \"./Grid.css\"\r\n\r\nclass GridRow extends React.Component {\r\n\r\n    static rowId = 0;\r\n    static newRowId() {\r\n        this.rowId++;\r\n        return this.rowId;\r\n    }\r\n\r\n    renderCells(columnRow) {\r\n        return columnRow.map((val, i) => {\r\n            if (val === null) {\r\n                return <GridCell key={GridCell.newCellId()  + \"-cell\" } value={null} isDate={false} />;\r\n            } else {\r\n                if (i === 0) {\r\n                    return <GridCell key={GridCell.newCellId() + \"-cell\" } value={val} isDate={true}/>;\r\n                } else {\r\n                    return <GridCell key={GridCell.newCellId() + \"-cell\" } value={val} isDate={false}/>;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.isHeaderRow ? \"grid-row grid-header-row\": \"grid-row\" }>\r\n                {this.renderCells(this.props.rowContent)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GridRow;","import React from \"react\";\r\nimport './HistoryPage.css'\r\nimport 'simplebar'; \r\nimport 'simplebar/dist/simplebar.css';\r\nimport GridRow from \"./GridRow\";\r\n\r\nclass HistoryPage extends React.Component {\r\n\r\n    renderGrid(annualStatement) {\r\n        if (annualStatement === null) {\r\n            return;\r\n        }\r\n        const categories = annualStatement.categories;\r\n        let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        let dates = [[\"Dates\"]];\r\n        for (let i = 0; i < 31; i++) {\r\n            dates.push([months[this.props.currentMonth - 1] + \" \" + (i + 1) + \", \" + this.props.currentAnnualStatement.year]);\r\n        }\r\n\r\n        return dates.map((date, i) => {\r\n            if (date[0] === \"Dates\") {\r\n                let headerRowContent = [date];\r\n                categories.forEach(categoryName => {\r\n                    headerRowContent.push([categoryName]);\r\n                });\r\n                return <GridRow key={GridRow.newRowId() + \"-row\"} rowContent={headerRowContent} isHeaderRow={true}/>\r\n            } else {\r\n                let entries = this.props.currentAnnualStatement.getMonthEntries(this.props.currentMonth);\r\n                let rowContent = [date];\r\n                categories.forEach(categoryName => {\r\n                    rowContent.push([]);\r\n                    entries.forEach(entry => {\r\n                        if (entry.category === categoryName && entry.date.day === +i) {\r\n                            rowContent[rowContent.length - 1].push(this.renderEntry(entry));\r\n                        }\r\n                    });                \r\n                });\r\n                return <GridRow key={GridRow.newRowId() + \"-row\"} rowContent={rowContent} isHeaderRow={false}/>\r\n            }\r\n        })\r\n    }\r\n\r\n    renderAllEntries(entries) {\r\n        return entries.map((entry) => {\r\n            return this.renderEntry(entry);\r\n        });\r\n    }\r\n\r\n    renderEntry(entry) {\r\n        return (\r\n            <div key={entry.id} className=\"HistoryPage-entry\">\r\n                <div className=\"HistoryPage-entry-main\">\r\n                    <div>{entry.location}</div>\r\n                    <div><span className=\"income-indicator\">&#9650;</span>${entry.income}</div>\r\n                    <div><span className=\"expense-indicator\">&#9660;</span>${entry.expense}</div>\r\n                </div>\r\n                <div className=\"HistoryPage-entry-collapse\">\r\n                    {entry.description}\r\n                </div>\r\n            </div>   \r\n        );\r\n    }\r\n\r\n    renderSelectOption(options) {\r\n        if (options === null) {\r\n            return null;\r\n        }\r\n        return options.map((op) => {\r\n            return <option key={op + \"-view-option\"} value={op}>{op}</option>;\r\n        });\r\n    }\r\n\r\n    onChangeViewYear = (e) => {\r\n        const year = e.target.value;\r\n        this.props.onChangeViewYear(year);\r\n    }\r\n\r\n    onChangeViewMonth =(e) => {\r\n        const month = e.target.value;\r\n        console.log(\"Changed: \" + month);\r\n        this.props.onChangeViewMonth(month);\r\n    }\r\n\r\n    getCurrentYear() {\r\n        if (this.props.currentAnnualStatement !== null) {\r\n            return this.props.currentAnnualStatement.year;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getCurrentMonth() {\r\n        console.log(\"current month: \" + this.props.currentMonth);\r\n        if (this.props.availableMonths !== null) {\r\n            let selectedMonth = this.props.availableMonths[0];\r\n            this.props.availableMonths.forEach(month => {\r\n                if (month === this.props.currentMonth) {\r\n                    selectedMonth = this.props.currentMonth;\r\n                    return;\r\n                }\r\n            });\r\n            return selectedMonth;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"HistoryPage-body\">\r\n                <div className=\"HistoryPage-header-content\">\r\n                    <div className=\"HistoryPage-header-label\">History</div>\r\n                    <div className=\"HistoryPage-select-label\">Year</div>\r\n                    <select className=\"HistoryPage-header-select\" value={this.getCurrentYear()} \r\n                        onChange={(e) => this.onChangeViewYear(e)}>\r\n                        {this.renderSelectOption(this.props.availableYears)}\r\n                    </select>\r\n                    <div className=\"HistoryPage-select-label\">Month</div>\r\n                    <select className=\"HistoryPage-header-select\" value={this.getCurrentMonth()}\r\n                         onChange={(e) => this.onChangeViewMonth(e)}>\r\n                        {this.renderSelectOption(this.props.availableMonths)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"HistoryPage-content\" data-simplebar data-simplebar-auto-hide=\"false\">\r\n                    <div className=\"HistoryPage-grid\">\r\n                            {this.renderGrid(this.props.currentAnnualStatement)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default HistoryPage;","\r\nclass MonthStatement {\r\n    constructor(id, month) {\r\n        this.id = id;\r\n        this.month = month;\r\n        this.totalIncome = 0;\r\n        this.totalExpense = 0;\r\n        this.monthlyEntires = [];\r\n    }\r\n\r\n    calculateTotal() {\r\n        this.totalIncome = 0;\r\n        this.totalExpense = 0;\r\n        this.monthlyEntires.forEach(entry => {\r\n            this.totalIncome += +entry.income;\r\n            this.totalExpense += +entry.expense;\r\n        });\r\n    }\r\n\r\n    addEntry(entry) {\r\n        this.monthlyEntires.push(entry);\r\n        this.calculateTotal();\r\n    }\r\n\r\n    isStatementEmpty() {\r\n        return this.monthlyEntires.length === 0;\r\n    }\r\n}\r\n\r\nexport default MonthStatement;","import MonthStatement from \"./MonthStatement\";\r\n\r\nclass AnnualStatement {\r\n    constructor(year) {\r\n        this.year = year;\r\n        this.totalIncome = 0;\r\n        this.totalExpense = 0;\r\n        this.monthlyStatements = this.initEmptyMonthStatement();\r\n        this.categories = [];\r\n    }\r\n\r\n    initEmptyMonthStatement() {\r\n        let statements = new Array(12);\r\n        for (let i = 0; i < statements.length; i++) {\r\n            statements[i] = new MonthStatement(i, i + 1);\r\n        }\r\n        return statements;\r\n    }\r\n\r\n    calculateTotal() {\r\n        this.totalIncome = 0;\r\n        this.totalExpense = 0;\r\n        this.monthlyStatements.forEach(statement => {\r\n            this.totalIncome += +statement.totalIncome;\r\n            this.totalExpense += +statement.totalExpense;\r\n        });\r\n    }\r\n\r\n    replaceMonthlyStatement(statement) {\r\n        this.monthlyStatements[statement.month - 1] = statement;\r\n        this.calculateTotal();\r\n    }\r\n\r\n    addEntryToMonthStatement(month, entry) {\r\n        if (this.monthlyStatements[month - 1] != null) {\r\n            this.monthlyStatements[month - 1].addEntry(entry);\r\n        }\r\n        this.calculateTotal();\r\n    }\r\n\r\n    addCategory(category) {\r\n        console.log(this.categories);\r\n        if (this.categories.length > 0 && this.categories.includes(category)) {\r\n            return false;\r\n        }\r\n        this.categories.push(category);\r\n        return true;\r\n    }\r\n\r\n    getMonthTotalIncome(month) {\r\n        return this.monthlyStatements[month - 1].totalIncome;\r\n    }\r\n    getMonthTotalExpense(month) {\r\n        return this.monthlyStatements[month - 1].totalExpense;\r\n    }\r\n    getMonthEntries(month) {\r\n        return this.monthlyStatements[month - 1].monthlyEntires;\r\n    }\r\n}\r\n\r\nexport default AnnualStatement;","import React from \"react\";\r\nimport SummaryPage from \"./SummaryPage\";\r\nimport './Dashboard.css'\r\nimport AddPage from \"./AddPage\";\r\nimport HistoryPage from \"./HistoryPage\";\r\nimport AnnualStatement from \"./AnnualStatement\";\r\nimport 'simplebar'; \r\nimport 'simplebar/dist/simplebar.css';\r\nimport GoogleLogin from \"react-google-login\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    CLIENT_ID = '91993730445-4jjm5pf1kvja9m8r6b66uarvnqmdir1b.apps.googleusercontent.com';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentMonth: 1,\r\n            currentYearIndex: 0,\r\n            allAnnualStatements: [],\r\n        }\r\n    }\r\n\r\n    getCurrentAnnualStatement() {\r\n        if (this.state.allAnnualStatements.length === 0) {\r\n            return null;\r\n        }\r\n        console.log(this.state.currentYearIndex);\r\n        return this.state.allAnnualStatements[this.state.currentYearIndex];\r\n    }\r\n\r\n    setCurrentAnnualStatement(newStatement) {\r\n        let newAllAnnualStatement = this.state.allAnnualStatements;\r\n        newAllAnnualStatement[this.state.currentYearIndex] = newStatement;\r\n        this.setState({allAnnualStatements: newAllAnnualStatement});\r\n    }\r\n\r\n    addNewAnnualStatementWithEntry(entry) {\r\n        const newAllAnnualStatements = this.state.allAnnualStatements;\r\n        const newAnnualStatement = new AnnualStatement(entry.date.year);\r\n        newAnnualStatement.addCategory(entry.category);\r\n        newAnnualStatement.addEntryToMonthStatement(entry.date.month, entry);\r\n        newAllAnnualStatements.push(newAnnualStatement);\r\n        const newCurrentYearIndex = newAllAnnualStatements.length - 1;\r\n        this.setState({allAnnualStatements: newAllAnnualStatements,\r\n            currentYearIndex: newCurrentYearIndex,\r\n            currentMonth: entry.date.month});\r\n        console.log(newAllAnnualStatements);\r\n    }\r\n\r\n    handleNewEntry = (entry) => {\r\n        if (this.getCurrentAnnualStatement() === null) {\r\n            this.addNewAnnualStatementWithEntry(entry);\r\n            return;\r\n        }\r\n\r\n        const newCurrentAnnualStatement = this.getCurrentAnnualStatement();\r\n        let annualStatementIndex = this.state.currentYearIndex;\r\n        if (entry.date.year !== newCurrentAnnualStatement.year) {\r\n            let yearDNE = true;\r\n            this.state.allAnnualStatements.forEach((statement, i) => {\r\n                if (statement.year === entry.date.year) {\r\n                    yearDNE = false;\r\n                    annualStatementIndex = i;\r\n                } \r\n            });\r\n            if (yearDNE) {\r\n                this.addNewAnnualStatementWithEntry(entry);\r\n                return;\r\n            } \r\n        } \r\n        const newAllAnnualStatements = this.state.allAnnualStatements;\r\n        newAllAnnualStatements[annualStatementIndex].addCategory(entry.category);\r\n        newAllAnnualStatements[annualStatementIndex].addEntryToMonthStatement(entry.date.month, entry);\r\n        this.setState({allAnnualStatements: newAllAnnualStatements,\r\n            currentYearIndex: annualStatementIndex,\r\n            currentMonth: entry.date.month})\r\n\r\n    }\r\n\r\n    handleNewCategory = (c) => {\r\n        const newCurrentAnnualStatement = this.getCurrentAnnualStatement();\r\n        if (newCurrentAnnualStatement.addCategory(c)) {\r\n            this.setCurrentAnnualStatement(newCurrentAnnualStatement);\r\n        }\r\n    }\r\n\r\n    getAvailableYears() {\r\n        let years = [];\r\n        this.state.allAnnualStatements.forEach(statement => {\r\n            console.log(statement);\r\n            years.push(statement.year);\r\n        });\r\n        console.log(years);\r\n        return years;\r\n    }\r\n\r\n    getAvailableMonths() {\r\n        let month = [];\r\n        const currentAnnualStatement = this.getCurrentAnnualStatement();\r\n        if (currentAnnualStatement == null) {\r\n            return null;\r\n        }\r\n        currentAnnualStatement.monthlyStatements.forEach(monthStatement => {\r\n            if (!monthStatement.isStatementEmpty()) {\r\n                month.push(monthStatement.month);\r\n            }\r\n        });\r\n        console.log(month);\r\n        return month;\r\n    }\r\n\r\n    handleChangeViewYear = (year) => {\r\n        const allAnnualStatements = this.state.allAnnualStatements;\r\n        for(let i = 0; i < allAnnualStatements.length; ++i) {\r\n            if (allAnnualStatements[i].year === year) {\r\n                let firstAvailableMonth = -1;\r\n                allAnnualStatements[i].monthlyStatements.forEach(monthStatement => {\r\n                    if (!monthStatement.isStatementEmpty()) {\r\n                        firstAvailableMonth = monthStatement.month;\r\n                    }\r\n                });\r\n\r\n                this.setState({currentYearIndex: i, currentMonth: firstAvailableMonth});\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeViewMonth = (month) => {\r\n        console.log(month);\r\n        this.setState({currentMonth: month});\r\n    }\r\n\r\n    successLoginGoogle = (response) => {\r\n        console.log(response);\r\n        var url = `/login?access_token=${response.tokenObj.access_token}`;\r\n        //var params = { access_token: response.tokenObj.access_token };\r\n        //url.search = new URLSearchParams(params).toString();\r\n        console.log(url);\r\n        fetch(url)\r\n            .then((res) => res.json())\r\n            .then((data) => {console.log(\"dashboard called api\"); console.log(data)});\r\n    }\r\n    failureLoginGoogle = (response) => {\r\n        console.log(\"failed to login to google\");\r\n        console.log(response);\r\n    }\r\n\r\n    saveToDrive = () => {\r\n        var data = JSON.stringify(this.state);\r\n        fetch(`/save?data=${data}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {console.log(\"dashboard called save\"); console.log(data)});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Dashboard-body\">\r\n                <div className=\"Dashboard-content\">\r\n                    <div className=\"Dashbaord-content-left\" >\r\n                        <div className=\"Dashboard-header\">\r\n                            <div className=\"Dashboard-header-label\">MFlow</div>\r\n                            <button onClick={this.saveToDrive}>\r\n                                Save\r\n                            </button>\r\n                            <GoogleLogin \r\n                                clientId={this.CLIENT_ID}\r\n                                buttonText=\"Log in with Google\"\r\n                                onSuccess={this.successLoginGoogle}\r\n                                onFailure={this.failureLoginGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                                scope={'https://www.googleapis.com/auth/drive'}\r\n                                isSignedIn={true}/>\r\n                        </div>\r\n                        <div className=\"Dashboard-content-left-scrollabe\" data-simplebar>\r\n                            <SummaryPage currentAnnualStatement={this.getCurrentAnnualStatement()}\r\n                                        currentMonth={this.state.currentMonth} />\r\n                            <br/>\r\n                            <AddPage currentAnnualStatement={this.getCurrentAnnualStatement()} \r\n                                    onAddEntry={this.handleNewEntry}\r\n                                    onAddCategory={this.handleNewCategory}/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"Dashboard-content-right\">\r\n                       <HistoryPage currentAnnualStatement={this.getCurrentAnnualStatement()} \r\n                                    currentMonth={this.state.currentMonth}\r\n                                    onChangeViewYear={this.handleChangeViewYear}\r\n                                    onChangeViewMonth={this.handleChangeViewMonth}\r\n                                    availableYears={this.getAvailableYears()}\r\n                                    availableMonths={this.getAvailableMonths()}/>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Dashboard;","import './App.css';\nimport Dashboard from './Dashboard.js';\nimport React from 'react';\n\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-body\">\n        <button onClick={() => fetch(\"/save\")\n      .then((res) => res.json())\n      .then((data) => {console.log(\"called save\"); setData(data.message);})}>\n        test upload\n        </button>\n        <Dashboard />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}